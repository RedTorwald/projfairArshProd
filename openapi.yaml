openapi: 3.0.0
paths:
  '/api/admin/candidates/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить студента'
      operationId: 1159a87fae094064ad7fdc67e8104494
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Студент удален'
  /api/admin/candidates:
    post:
      tags:
        - ADMIN
      summary: 'Создание студента'
      operationId: 3b17c617fad2984d0721794131f3cea3
      requestBody:
        description: 'Параметры для создания студента'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                about:
                  type: string
                email:
                  type: string
                numz:
                  type: integer
                phone:
                  type: string
                course:
                  type: integer
                training_group:
                  type: string
                canSendParticipations:
                  type: boolean
                skill_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Информация о студенте создана'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить информацию о студенте @TODO BODY'
      operationId: 2863c09aad77ed86e41eb20ea249ce4f
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления студента'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                about:
                  type: string
                email:
                  type: string
                numz:
                  type: integer
                phone:
                  type: string
                course:
                  type: integer
                training_group:
                  type: string
                skill_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Информация о студенте обновлена'
        '404':
          description: 'Студент не найден'
  /api/admin/participationDeadline:
    patch:
      tags:
        - ADMIN
      summary: 'Изменение дедлайна подачи заявок YYYY-MM-DD'
      operationId: b033dde945a9781a25f3c99a344300a8
      requestBody:
        description: 'Параметры для обновления заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                date:
                  type: string
                  format: date
              type: object
      responses:
        '200':
          description: 'дедлайн подачи заявок изменен'
  '/api/admin/participations/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление заявки'
      operationId: c59fd8cebecda6a8f4c23e55ec6ed094
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка удалена'
    patch:
      tags:
        - Participation
      summary: 'Изменение заявки у студента'
      operationId: 28b6d1ee56c9fcb9b71e4f110bd572fb
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
                state_id:
                  type: integer
                candidate_id:
                  type: integer
                project_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка изменена'
        '404':
          description: 'Заявка не найдена'
        '400':
          description: 'У кандидата уже есть заявка на этот проект'
  /api/admin/participations:
    get:
      tags:
        - ADMIN
      summary: 'Получить все заявки'
      operationId: 08cfd783e97365a1e9560a470fdc89f9
      responses:
        '200':
          description: 'Список всех заявок'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
    post:
      tags:
        - ADMIN
      summary: 'Создать заявку @TODO BODY'
      operationId: 16176789c58375bad7d2c751c15b2b38
      requestBody:
        description: 'Параметры для создания заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
                state_id:
                  type: integer
                candidate_id:
                  type: integer
                project_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка создана'
        '400':
          description: 'У кандидата уже есть заявка на этот проект'
  '/api/admin/participations/{id}':
    get:
      tags:
        - ADMIN
      summary: 'Получить заявку по ID'
      operationId: 61dd4b50183c78e715843e31789bb0ff
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Заявка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
  '/api/admin/projects/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление проекта'
      operationId: 3e5ccd2e6e3d9bd429b36cae215713cf
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Проект удален'
        '404':
          description: 'Проект не найден'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить проект'
      operationId: e2c4a11d12a4215787f8f46b11c805d8
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                date_end:
                  type: string
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                state_id:
                  type: integer
                type_id:
                  type: integer
                supervisor_ids:
                  type: array
                  items: { type: integer }
                skill_ids:
                  type: array
                  items: { type: integer }
                speciality_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Проект изменен'
        '404':
          description: 'Проект не найден'
  /api/admin/projects/:
    get:
      tags:
        - ADMIN
      summary: 'Получить информацию о всех проектах'
      operationId: 61aaffa080da129d88459601deafa221
      responses:
        '200':
          description: 'Все проекты'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /api/admin/projects:
    post:
      tags:
        - ADMIN
      summary: 'Создать проект'
      operationId: 111fb580612eb7b269c09a8bc49db764
      requestBody:
        description: 'Параметры для создания проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                  format: date
                date_end:
                  type: string
                  format: date
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                state_id:
                  type: integer
                type_id:
                  type: integer
                supervisor_ids:
                  type: array
                  items: { type: integer }
                skill_ids:
                  type: array
                  items: { type: integer }
                speciality_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Проект создан'
  '/api/admin/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление категории навыков'
      operationId: 825ecff95822915cb9f5ae85c8a06b10
      parameters:
        -
          name: id
          in: path
          description: 'ID категории навыков'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'категория навыков удалена'
  /api/admin/skillCatigory:
    get:
      tags:
        - ADMIN
      summary: 'Получить информацию  о всех категориях навыков'
      operationId: 63920770b63cf4bf99b0279e9e453eab
      responses:
        '200':
          description: 'Информация о всех категориях навыков'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillCategory'
  '/api/admin/skillCategory/{id}':
    get:
      tags:
        - ADMIN
      summary: 'Получение информации о категории навыков по ID'
      operationId: eda60c18a001ef09620e5a85ac7657ec
      parameters:
        -
          name: id
          in: path
          description: 'ID категории навыков'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Категория навыков'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillCategory'
        '404':
          description: 'Категория навыков не найдена'
  /api/admin/skillCategory:
    post:
      tags:
        - ADMIN
      summary: 'Создать категорию навыков'
      operationId: f472023b22e4a380f5b4b2c85a31256a
      requestBody:
        description: 'Параметры для обновления категории навыка'
        required: true
        content:
          aplication\json:
            schema:
              properties:
                name:
                  type: string
              type: object
      responses:
        '200':
          description: 'категория навыков создана'
  '/api/admin/skillCategory/${id}':
    patch:
      tags:
        - ADMIN
      summary: 'Обновить категорию навыков'
      operationId: f44f4da324207f8df281d4c6fe99ce11
      parameters:
        -
          name: id
          in: path
          description: 'ID категория навыков'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления категории навыка'
        required: true
        content:
          aplication\json:
            schema:
              properties:
                name:
                  type: string
              type: object
      responses:
        '200':
          description: 'категория навыков изменена'
  '/api/admin/states/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить состояние проекта'
      operationId: b31a515315f2c36013e9295c8f24c939
      parameters:
        -
          name: id
          in: path
          description: 'ID состояния проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Состояние проекта удалено'
        '404':
          description: 'Состояние проекта не найдено'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить состояние проекта'
      operationId: 128656e872757229a6c40b8b7cd0f630
      parameters:
        -
          name: id
          in: path
          description: 'ID состояния проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления состояния проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                state:
                  type: string
              type: object
      responses:
        '200':
          description: 'Состояние проекта изменено'
        '404':
          description: 'Состояние проекта не найдено'
  /api/admin/states:
    post:
      tags:
        - ADMIN
      summary: 'Создать состояние проекта'
      operationId: 0c942b0a43a4437c869b5940e20f26e3
      requestBody:
        description: 'Параметры для обновления состояния проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                state:
                  type: string
              type: object
      responses:
        '200':
          description: 'Состояние проекта создано'
  '/api/admin/supervisors/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить преподавателя'
      operationId: 80394ebee6acccdced5d5b9557058252
      parameters:
        -
          name: id
          in: path
          description: 'ID преподавателя'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Преподаватель удален'
        '404':
          description: 'Преподаватель не найден'
  /api/admin/supervisors:
    post:
      tags:
        - ADMIN
      summary: 'Создать преподавателя'
      operationId: 5e04dd6c28e7e27544abc31005d977c8
      requestBody:
        description: 'Параметры для создания руководителя проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                email:
                  type: string
                about:
                  type: string
                position:
                  type: string
              type: object
      responses:
        '200':
          description: 'Преподаватель создан'
  '/api/admin/supervisors/{id}':
    patch:
      tags:
        - ADMIN
      summary: 'Обновить состояние проекта'
      operationId: 1ab32dcae664fdd506852d7164d961c2
      parameters:
        -
          name: id
          in: path
          description: 'ID преподавателя @TODO BODY'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления руководителя проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                email:
                  type: string
                about:
                  type: string
                position:
                  type: string
              type: object
      responses:
        '200':
          description: 'Преподаватель изменен'
        '404':
          description: 'Преподаватель не найден'
  '/api/admin/types/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить тип проекта'
      operationId: ac4c955ae2fa550c7e3df8bfaea48f18
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Тип проекта удален'
        '404':
          description: 'Тип проекта не найден'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить тип проекта'
      operationId: ddc84a394082d962b2d340fb2913c855
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для создания типа проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Тип проекта изменен'
        '404':
          description: 'Тип проекта не найден'
  /api/admin/types:
    post:
      tags:
        - ADMIN
      summary: 'Создать тип проекта'
      operationId: c939d2a21adb706922ffabca2284bbfa
      requestBody:
        description: 'Параметры для создания типа проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Тип проекта создан'
  /campus_auth:
    get:
      tags:
        - Auth
      summary: 'Авторизация через кампус'
      operationId: 9d55367cf81c991ca0964d5d8f0dd060
      responses:
        '200':
          description: 'Пользователь авторизован'
  /campus_out:
    get:
      tags:
        - Auth
      summary: 'Выход из аккаунта'
      operationId: a12c2317fbb07a89c3eef2cde10f4dfd
      responses:
        '200':
          description: 'Пользователь вышел из аккаунта'
  /api/arhiveProjects:
    get:
      tags:
        - Candidate
      summary: 'Получение активного проекта студента'
      operationId: 6999044fcfc619dcae4b89032b2ae1c1
      responses:
        '200':
          description: 'Активный проект студента'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  '/api/participations/${id}':
    post:
      tags:
        - UNUSED
      summary: 'Создание заявки на проект'
      operationId: 301a772e316b0ba3f6c6f0c6f5916c7b
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка создана'
        '404':
          description: 'Не найдено'
        '403':
          description: 'Вы уже подали 3 заявки'
    delete:
      tags:
        - Participation
      summary: 'Удаление заявки у авторизованного студента'
      operationId: 6700919707cec7e6144a07d3c23a342e
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка удалена'
        '403':
          description: 'Вы не можете удалить чужую заявку'
    patch:
      tags:
        - Participation
      summary: 'Изменение приоритета заявки у авторизованного студента'
      operationId: f8565721843057e358bbc347e64c2eda
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка изменена'
        '403':
          description: 'Вы не можете изменить чужую заявку'
  /api/candidates:
    get:
      tags:
        - Candidate
      summary: 'Получить информацию о всех студентах'
      operationId: 86a41d1e246bd2e10a64300d56eb578a
      responses:
        '200':
          description: 'Информация о всех студентах'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
  /api/candidate:
    get:
      tags:
        - Candidate
      summary: 'Получить информацию об авторизованном студенте'
      operationId: 2480a493492a84a70c52416430a1d362
      responses:
        '200':
          description: 'Информация о студенте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
    put:
      tags:
        - Candidate
      summary: 'Обновить номер телефона, о себе, скиллы студента @TODO BODY'
      operationId: 7992d4e4a9e0c02c61e4717a66494a25
      requestBody:
        content:
          application/json:
            schema:
              properties:
                'skill_ids[]':
                  type: array
                  items: { type: integer }
                about:
                  type: string
                phone:
                  type: string
              type: object
      responses:
        '200':
          description: 'Информация о студенте Обновлена'
  /api/participations:
    get:
      tags:
        - Candidate
      summary: 'Получение заявок студента'
      operationId: b3b6a65927c7c35ddf4bec2dd1aa3bc9
      responses:
        '200':
          description: 'Информация о заявках студента'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
  '/api/candidates/{id}':
    get:
      tags:
        - Candidate
      summary: 'Получить информацию о студенте по ID'
      operationId: 24960ff0fb77086529a54ad57a10816c
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация о студенте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '404':
          description: 'Информация о студенте не найдена'
  /api/candidate/skills:
    get:
      tags:
        - Candidate
      summary: 'Получение навыков авторизованного студента'
      operationId: 386620a303432a949055b472a169a0ac
      responses:
        '200':
          description: 'Получение навыков студента'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
  '/api/institutes/getBySpecialityName/{specialityName}':
    get:
      tags:
        - Institute
      summary: 'Получить институт по названию специльности'
      operationId: ac5b11386e1f29242c21942a1f51c926
      parameters:
        -
          name: specialityName
          in: path
          description: 'Название специльности'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Информация об институте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
        '404':
          description: 'Не найдено'
  /api/institutes:
    get:
      tags:
        - Institute
      summary: 'Получить институты'
      operationId: ee9911bd3fae617cfbb1b2db973d1082
      responses:
        '200':
          description: 'Все институты'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institute'
  '/api/institutes/isInSameInstitute/{specialityName1}/{specialityName2}':
    get:
      tags:
        - Institute
      summary: 'Проверка находятся ли две специальности в одном институте'
      operationId: 401f1d077801d48956d7c3605d4fc280
      parameters:
        -
          name: specialityName1
          in: path
          description: 'Название первой специльности'
          required: true
          schema:
            type: string
        -
          name: specialityName2
          in: path
          description: 'Название второй специльности'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'находятся ли две специальности в одном институте'
          content:
            application/json:
              schema:
                properties:
                  isSame: { type: boolean }
                type: object
        '404':
          description: 'Не найдено'
  '/api/institutes/{id}':
    get:
      tags:
        - Candidate
      summary: 'Получить информацию об институте по ID'
      operationId: ca24ce3c8648cce7c7032093eb1afe54
      parameters:
        -
          name: id
          in: path
          description: 'ID института'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация об институте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
  /api/campus:
    get:
      tags:
        - KAMPUS
      summary: 'Данные для кампуса'
      operationId: c3cf50ca5694f90f15978476d7ddd41d
      responses:
        '200':
          description: '7 проектов на странице + навигация'
          content:
            application/json:
              schema:
                properties:
                  projectCount: { description: 'Общее количество проектов', type: integer }
                  data: { description: 'Массив проектов', type: array, items: { $ref: '#/components/schemas/Project' } }
                type: object             
  /api/participationsDeadline:
    get:
      tags:
        - Participation
      summary: 'Получение дедлайна подачи заявки'
      operationId: 9abe53584b0d0b085e984c7f5168ce95
      responses:
        '200':
          description: 'Информация об институте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeadLine'
        '404':
          description: 'Дедлайн не назначен'
  /api/projects/filter:
    get:
      tags:
        - Project
      summary: 'Получить проекты с фильтрацией'
      operationId: 3172f11dfe97cf7f45f02c67fdfc86e5
      parameters:
        -
          name: page
          in: query
          description: 'Номер страницы (отчет с нуля)'
          required: false
          schema:
            type: integer
        -
          name: skills
          in: query
          description: 'Массив ID скилов'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: specialties
          in: query
          description: 'Массив ID специальностей'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: type
          in: query
          description: 'Массив ID типов проекта'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: state
          in: query
          description: 'Массив ID состояний проекта'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: supervisor
          in: query
          description: 'Массив ID руководителей'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: difficulty
          in: query
          description: 'Массив с сложностями'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: order
          in: query
          description: 'Порядок сортировки (возрастающий - asc, убывающий - desc)'
          required: false
          schema:
            type: string
        -
          name: sortBy
          in: query
          description: 'По какому полю сортировать'
          required: false
          schema:
            type: string
        -
          name: pageSize
          in: query
          description: 'Размер страницы. Позитивное число'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: '7 проектов на странице + навигация'
          content:
            application/json:
              schema:
                properties:
                  projectCount: { description: 'Общее количество проектов', type: integer }
                  data: { description: 'Массив проектов', type: array, items: { $ref: '#/components/schemas/Project' } }
                type: object
  '/api/projects/{id}/participants':
    get:
      tags:
        - Project
      summary: 'Получение участников на проекте'
      operationId: 126b02f893ec810bc0b91bb3a8795010
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Участники проекта'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
        '404':
          description: 'Проект не найден'
  '/api/projects/{id}':
    get:
      tags:
        - Project
      summary: 'Получение информации о проекте по ID'
      operationId: 30d477cc11e01c46fe7c71d21d0f3eb1
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация о проекте @TODO Понять какую информацию отдавать если проект активный архивный и т.д.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: 'Проект не найден'
  '/api/skills/${id}':
    delete:
      tags:
        - UNUSED
      summary: 'Удаление навыка'
      operationId: af4a3c6b9f08ba6b062eff0bd52754f6
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'навык удален'
    patch:
      tags:
        - UNUSED
      summary: 'Обновить навык'
      operationId: f17422f07c1c7c953d6af136f3bafbbb
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка @TODO BODY'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'навык изменен'
  /api/skills/:
    get:
      tags:
        - Skill
      summary: 'Получить данные для фильтрации по навыкам и специальностям. Скрывать данные других институтов если пользователь авторизован'
      operationId: 4cdbc410153f11ae6a10002715d9fd6c
      responses:
        '200':
          description: 'Навыки, специальности, категории скилов'
          content:
            application/json:
              schema:
                properties:
                  skills: { description: 'Все навыки', type: array, items: { $ref: '#/components/schemas/Skill' } }
                  specialities: { description: 'Специальности. Если пользователь авторизован, то показываются специальности только его института', type: array, items: { $ref: '#/components/schemas/Skill' } }
                  skillCategories: { description: 'Категории скилов', type: array, items: { $ref: '#/components/schemas/Skill' } }
                type: object
  '/api/skills/{id}':
    get:
      tags:
        - Skill
      summary: 'Получение информации о навыке по ID'
      operationId: 2b7359be165c54b3fff865ef54f4f8f0
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Навык
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: 'Навык не найден'
  /api/skills:
    post:
      tags:
        - UNUSED
      summary: 'Создать навык @TODO BODY'
      operationId: 85bc1be1de5dcf301af49f152469ef9a
      responses:
        '200':
          description: 'навык создан'
  /api/states/:
    get:
      tags:
        - ProjectState
      summary: 'Получить все состояния проекта'
      operationId: 4381924b418372a1ebbf493a65453e11
      responses:
        '200':
          description: 'Cостояния проектов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectState'
  '/api/states/{id}':
    get:
      tags:
        - ProjectState
      summary: 'Получение состояния проекта по ID'
      operationId: 61e81f5821617080c2640403de3670c4
      parameters:
        -
          name: id
          in: path
          description: 'ID состояния проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Состояние проекта'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectState'
        '404':
          description: 'Состояние проекта не найдено'
  /api/supervisors/:
    get:
      tags:
        - Supervisor
      summary: 'Получить всех преподавателей'
      operationId: 14d9df40e38ee19ded9b467255d7fd3c
      responses:
        '200':
          description: 'все преподаватели'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supervisor'
  /api/supervisor/projectsOnReview:
    get:
      tags:
        - 'SUPERVISOR CABINET'
      summary: 'Получить проекты на рассмотрении. Делает преподаватель'
      operationId: 7021a33c16c7ecbbb801e0c611ab203d
      responses:
        '200':
          description: 'Информации о заявках руководителя @TODO RESPONCE'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  api/supervisor/projectsOnReview:
    post:
      tags:
        - 'SUPERVISOR CABINET'
      summary: 'Создать проект на рассмотрении. Делает преподаватель'
      operationId: 6dac10a008a83382b64be7d6f56964d2
      requestBody:
        description: 'Параметры для создания проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                  format: date
                date_end:
                  type: string
                  format: date
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                type_id:
                  type: integer
                supervisor_ids:
                  type: array
                  items: { type: integer }
                skill_ids:
                  type: array
                  items: { type: integer }
                speciality_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Проект подан на рассмотрение'
  /api/types/:
    get:
      tags:
        - ProjectType
      summary: 'Получение всех типов проекта'
      operationId: 22d40a36b778600a73a54731e4079a70
      responses:
        '200':
          description: 'Типы проектов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
  '/api/types/{id}':
    get:
      tags:
        - ProjectType
      summary: 'Получение типа проекта по ID'
      operationId: d5abbc44236ab1e2376f29f847e0ab87
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Тип проекта'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
        '404':
          description: 'Тип проекта не найден'
components:
  schemas:
    Candidate:
      properties:
        id:
          description: 'ID студента'
          type: integer
        fio:
          description: 'ФИО студента'
          type: string
        about:
          description: 'Информация о студенте'
          type: string
        email:
          description: Почта
          type: string
        numz:
          description: 'Номер зачетной книжки'
          type: string
        phone:
          description: Телефон
          type: string
        course:
          description: Курс
          type: integer
        training_group:
          description: 'Учебная группа'
          type: string
        canSendParticipations:
          description: 'Может ли отправлять заявки на проекты'
          type: boolean
      type: object
    Group:
      properties:
        id:
          description: 'ID групппы'
          type: integer
        specialityCourse_id:
          description: 'ID специальности с курсом'
          type: integer
        name:
          description: 'ID название'
          type: string
      type: object
    Institute:
      properties:
        id:
          description: 'ID института'
          type: integer
        name:
          description: 'Название института'
          type: string
      type: object
    ParticipationDeadLine:
      properties:
        id:
          description: ID
          type: integer
        deadline:
          description: 'Дата окончания сбора заявок'
          type: integer
      type: object
    Participation:
      properties:
        id:
          description: 'ID заявки'
          type: integer
        priority:
          description: 'Приоритет заявки'
          type: integer
        project_id:
          description: 'ID проекта, на которые подали заявку'
          type: string
        state_id:
          description: 'ID состояния'
          type: string
        candidate_id:
          description: 'ID студента подавшего заявку'
          type: string
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
      type: object
    Project:
      properties:
        id:
          description: 'ID проекта'
          type: integer
        prevProjectId:
          description: 'ID предшествующего проекта или null'
          type: integer
        title:
          description: 'Название проекта'
          type: string
        places:
          description: 'Количество мест на проекте'
          type: integer
        goal:
          description: Цель
          type: string
        description:
          description: Описание
          type: string
        difficulty:
          description: Сложность
          type: integer
        date_start:
          description: 'Дата начала (2022-09-01)'
          type: string
        date_end:
          description: 'Дата окончания (2023-05-30)'
          type: string
        requirements:
          description: Требования
          type: string
        additional_inf:
          description: 'Дополнительная информация'
          type: string
        product_result:
          description: 'Продуктовынй результат'
          type: string
        study_result:
          description: 'Учебный результат'
          type: string
        supervisors:
          description: Руководители
          type: array
          items:
            $ref: '#/components/schemas/Supervisor'
        skills:
          description: 'Требуемые навыки'
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        specialities:
          description: 'Для каких специальностей'
          type: array
          items:
            $ref: '#/components/schemas/Speciality'
        supervisorsNames:
          description: 'Имена руководителей'
          type: string
        state:
          $ref: '#/components/schemas/ProjectState'
        type:
          $ref: '#/components/schemas/ProjectType'
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
      type: object
    SkillCategory:
      properties:
        id:
          description: 'ID Категории скила'
          type: integer
        name:
          description: 'Название категории скила'
          type: string
      type: object
    Skill:
      properties:
        id:
          description: 'ID скила'
          type: integer
        name:
          description: 'Название скила'
          type: string
        skillCategory:
          $ref: '#/components/schemas/SkillCategory'
      type: object
    SpecialityCourse:
      properties:
        id:
          description: 'ID специальности с курсом'
          type: integer
        speciality_id:
          description: 'ID специальности'
          type: integer
        course:
          description: Курс
          type: integer
      type: object
    Speciality:
      properties:
        id:
          description: 'ID специальности'
          type: integer
        state:
          description: 'Название состояния'
          type: string
        institute:
          description: 'Институт к которому принадлежит специальность'
          type: object
      type: object
    StateParticipationProject:
      properties:
        id:
          description: 'ID Состояния заявки'
          type: integer
        state:
          description: 'Название состояния'
          type: string
      type: object
    ProjectState:
      properties:
        id:
          description: 'ID Состояния проекта'
          type: integer
        state:
          description: 'Название состояния'
          type: string
      type: object
    Supervisor:
      properties:
        id:
          description: 'ID Преподавателя'
          type: integer
        fio:
          description: ФИО
          type: string
        email:
          description: Почта
          type: string
        about:
          description: 'Информация о преподавателе'
          type: string
        position:
          description: Должность
          type: string
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
      type: object
    ProjectType:
      properties:
        id:
          description: 'ID типа проекта'
          type: integer
        type:
          description: 'Название типа проекта'
          type: string
      type: object
